using UnityEngine;

class Lance : MeleeWeapon
{
    /* 
        Inherited attributes:
          Sprite itemSprite    - Sprite of the weapon in the inventory
          string itemName      - Name of the item

          float swingTimer     - Time between attacks / Attack speed
          int damage           - Base damage the weapon does
          float knockback      - The amound of knockback the weapon does
          GameObject attack    - Prefab GameObject generated by the weapon
          
          Vector2 attackOffset - Vector to offset the position by (so it doesn't collide with the hero)
    */

    public Lance(Transform hero) : base(hero)
    {
        name = "Lance";

        // Lance swing timer: short
        swingTime = 0.4f;

        // Lance base damage: 1
        damage = 1;

        // Lance knockback
        knockback = 3f;

        // Load up the attack 
        attack = Resources.Load("Prefabs/LanceAttack") as GameObject;

        // Lance sprite
        //sprite = Resources.Load("Sprites/Sword") as Sprite;
        name = "Lance";

        attackOffset = new Vector2(1.28f, 0);
    }

    protected override void GenerateAttack(Vector2 pPos, Vector2 mPos)
    {
        // Find the angle between the two vectors
        Vector2 dir = (mPos - pPos).normalized;
        float ang = Mathf.Atan2(dir.y, dir.x) * Mathf.Rad2Deg;

        // Atan2 finds 180 to -180, we want 360
        if (ang < 0)
            ang += 360f;

        // Lock the angles that the weapon can attack at (increments of 45)
        //int fixedAng = Mathf.RoundToInt(ang / 45) * 45;

        // Find the final rotation of the attack
        Quaternion rot = Quaternion.Euler(0, 0, ang);

        // Find the offset of the attack
        Vector2 offSet = rot * attackOffset;

        // Find the position of the attack
        Vector3 pos = new Vector3(pPos.x + offSet.x, pPos.y + offSet.y, 0f);

        // Create the attack object
        GameObject meleeAttack = Object.Instantiate(attack, pos, rot) as GameObject;

        // Attach the attack's transform to the hero (make it follow)
        meleeAttack.transform.parent = GameObject.FindGameObjectWithTag("Hero").transform;

        // Get the stats to use
        LanceStats lanStats = meleeAttack.GetComponent<LanceStats>();
        // Set the attack's damage
        lanStats.Damage = stats.Damage;

        // Add damage for tip
        stats.BonusDamage += 1;
        // Recalculate damage
        lanStats.tipDamage = stats.Damage;
        // Remove damage from tip
        stats.BonusDamage -= 1;

        // Add damage for base
        stats.BonusDamage -= 1;
        // Recalculate damage
        lanStats.baseDamage = stats.Damage;
        // Remove damage from base
        stats.BonusDamage += 1;

        Debug.Log("Attacking for " + lanStats.tipDamage + " | " + lanStats.bluntDamage + " | " + lanStats.baseDamage);

        // Set the attack's knockback
        meleeAttack.GetComponent<LanceStats>().KnockBack = knockback;
    }
}
